Jacob Jakiemiec

2/4/21
initial meeting with Kelby (1hr) pair

The first thing we did was discuss user stories. For the core design, we decided on
making classes for the game, player, board, and ship. Where the game has two players,
the player has two boards, and a board has 5 ships. The only other bit feature that
we decided to do, besides local multiplayer, was to have an AI with multiple difficulty
levels. However, we both decided that the core gameplay must be finished before
we can do any other features.

After the user stories, we started coding. But mostly it was me trying to figure out
how to properly get git integrated into visual studio, and also remembering how header
and source files work with object oriented programming. But once those were figured out,
we started working on the beggining of the ship class.

2/5/21
working on ship / board (3hr) pair

For the most part, everthing went well. We spent most of the time trying to figure out how
we were going to store the data and how the classes would interact with each other. We settled
on having the board would hold spaces that knew if they were hit or not, and what ship (or no ship)
were on its tile. The ship would hold where each space is and if its been hit, if it has been 
destroyed, and its type of ship / size.

2/9/21
fiddling around (1 hr)

I decided to work on specifically the ship class for a little bit, mostly just to see if we 
could solidify some of the more abstract parts of the class. I also got the ship to know where each
space is (hopefully).

2/16/21
working on board

I worked towards making board printable so that testing is easier. Primarilly, I worked on a member
function that outputs the board as a 2D vector of characters. While working on it, I noticed that
we needed more data within the board class, so I made a new member variable called boardtype, which
keeps track of what kind of board the object is. This was made just to differentiate between the
board that the player uses to place their ships / keep track of opponent's guesses vs the board that
the player uses to keep track of their own guesses.

2/16/21
refactoring
(4 hr)

We decided that the current set up for the game was bad. Having both the ship class and the boat class
keep track of coordinates was both redundant and hard to work with. So we decided to get rid of both 
the ship class, and to change up the boat class. The ship class was replaced with a tile class, and 
the boat class now stored a vector of tiles. This vector is not the original 2D vector with every 
possible tile that we first started with, but instead a vector of all non-default tiles (with default
being non-shot empty tiles). As the game would be played, tiles would be added to the vector. 


2/17/21
placing ships on the board
(2 hr)

I left off where Kelby was on the actual gameplay portion of the game. He had made the introduction, which
showed off the board and a brief introduction to the game. I first on getting a single ship onto the board,
by asking the player for the ship, location and direction. Then I worked on getting all 5 ships placed on the
board for a single person. And finally, I refactored the placing process into a function that could be called
for each player. After the process was done, I made the game look nicer by implementing screen clears. I did
this by using system("cls"), which works with windows only.