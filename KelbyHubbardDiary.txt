// Kelby Hubbard

Wed. February 3, 2021:
3:45PM -> 4:30PM 
Meeting with Jacob Jakiemiec
    Discussed User Stories (and difficulties)
    Initial Design Requirements
        Game Class
            Manages Players, plays Battleship, manages rules
        Player Class
            Contains Both Player's boards
        Board Class
            Contains a grid and ships on grid
        Ship Class
            Contains ship size and health remaining
    Focus on the core game FIRST -> text based
        If extra time add AI enemies (easy, medium, hard) & | GUI
    Class Management / Heiarchy:
        Game >> Player >> Board >> Ship 
Started coding. Worked on Ship.cpp / Ship.hpp
    Implemented Ship class and Ship::getSize()

Thurs. February 4, 2021:
6:30PM -> 9:30PM
Meeting with Jacob Jakiemiec
    Pair Programming:
        Created test cases for Board Design and Ship Design
        Started Board Class
            Wrote board generator (default constructor)
            Wrote getBoard
            Wrote shootBoard
            WRITING placeShip
        Started Ship Class
            Wrote getSize
            Wrote isDestroyed
            Wrote getCords
            wrote getShipType
            WRITING default constructor 

Tue. February 16, 2021:
1:00PM -> 2:00PM
Solo Work (Project Owner)
    Review what is capable in project currently and what needs to be worked on before deadline (Fri)
        A way to startup the game
        View Board
        Place ships
        Play?
    Added new User Story of creating the main source file  
        Allows games to be started, instructions to be printed, and exited if they'd like
    Review previous meetings--
        Pair Programming:  
            In my opinion Pair Programming was effective, but I don't think it is necessarily more effective
            than working on our own. It is nice having the other person there in the meeting and to be able
            to disucss what you are currently writing and get two minds on the topic. I don't think that it
            is more effective than having both people write seperate code though. Personally I don't think 
            less mistakes were made during pair prorgramming vs doing on our own. I would like to perhaps
            try a different way of pair programming being that both people are in a call / conference 
            together and are working on SEPERATE pieces of code. But allowing to ask questions to the 
            partner in real time could make some really convinient code and ensure you don't hit any 
            "road blocks".
2:00PM -> 3:00PM
Solo Work (Developer)
    Added to function Board::shootBoard
        Checks if a ship was shot.
            If no ship was shot, tell player
            If a ship was shot it has to mark ship as hit and tell player
    This might be easier without having to talk to board first. Why have a board that holds ships
    and ship locations if the ship holds all the information. After shooting board you'd just have
    to shoot ship also. Very redudant. Perhaps everything go through ship class, and board class either
    doesn't exist OR just holds where something has been shot?
        More efficient, easier to visualize
            BUT will have to backtrack a lot of our work.
            Worth it?
            Will discuss with Jacob.